##Our working directory
setwd("D:/Research/MHP_Documents/Analysis with R")
getwd()

##Required libraries
library(readxl)
library(ggplot2)
library(caret)
library(tidyverse)
library(pROC)
library(rpart)
library(gridExtra)

##Upload the data file
MHP<-read_excel("df_MHP.AHC.xlsx")
head(MHP)

#Anxiety
df_MHP<-MHP[1:12]
df_MHP$D<-as.factor(df_MHP$D)
df_MHP<-df_MHP|>
  mutate(D=factor(D,labels=c("No","Yes")))

#Data split
indexes<-createDataPartition(df_MHP$D,p=0.8,list=FALSE)
train<-df_MHP[indexes,]
test<-df_MHP[-indexes,]

#Fitting xgboost classification model with xgbTree method
set.seed(1)
system.time(xgbTree<-train(D~.,data=train,method="xgbTree",
                           trControl=trainControl(method="cv",number=10,
                                                  classProbs = TRUE, summaryFunction = twoClassSummary),
                           metric="ROC"))
xgbTree
xgbTree$results%>%arrange(desc(ROC))%>%head(1)

##Feature importance
varImp(xgbTree)

#Evaluation performance of the model
confusionMatrix(predict(xgbTree,test),test$D,positive="Yes")

#ROC calculation
Roc<-roc(response=test$D,
         predictor=predict(xgbTree,newdata=test,type="prob")$Yes)
plot(Roc,legacy.axes=TRUE)
auc(Roc)

##Depression
df_MHP2<-MHP[c(1:11,13)]
df_MHP2$E<-as.factor(df_MHP2$E)
df_MHP2<-df_MHP2|>
  mutate(`E`=factor(`E`,labels=c("No","Yes")))

#Data split
indexes<-createDataPartition(df_MHP2$E,p=0.8,list=FALSE)
train2<-df_MHP2[indexes,]
test2<-df_MHP2[-indexes,]

#Fitting xgboost classification model with xgbTree method
set.seed(1)
system.time(xgbTree2<-train(`E`~.,data=train2,method="xgbTree",
                           trControl=trainControl(method="cv",number=10,
                                                  classProbs = TRUE, summaryFunction = twoClassSummary),
                           metric="ROC"))
xgbTree2
xgbTree2$results%>%arrange(desc(ROC))%>%head(1)

##Feature importance
varImp(xgbTree2)

#Evaluation performance of the model
confusionMatrix(predict(xgbTree2,test2),test2$E,positive="Yes")

#ROC calculation
Roc2<-roc(response=test2$E,
         predictor=predict(xgbTree2,newdata=test2,type="prob")$Yes)
plot(Roc2,legacy.axes=TRUE)
auc(Roc2)

##Insomnia
df_MHP3<-MHP[c(1:11,14)]
df_MHP3$F<-as.factor(df_MHP3$F)
df_MHP3<-df_MHP3|>
  mutate(`F`=factor(`F`,labels=c("No","Yes")))

#Data split
indexes<-createDataPartition(df_MHP3$F,p=0.8,list=FALSE)
train3<-df_MHP3[indexes,]
test3<-df_MHP3[-indexes,]

#Fitting xgboost classification model with xgbTree method
set.seed(1)
system.time(xgbTree3<-train(`F`~.,data=train3,method="xgbTree",
                            trControl=trainControl(method="cv",number=10,
                                                   classProbs = TRUE, summaryFunction = twoClassSummary),
                            metric="ROC"))
xgbTree3
xgbTree3$results%>%arrange(desc(ROC))%>%head(1)

##Feature importance
varImp(xgbTree3)

#Evaluation performance of the model
confusionMatrix(predict(xgbTree3,test3),test3$F,positive="Yes")

#ROC calculation
Roc3<-roc(response=test3$F,
          predictor=predict(xgbTree3,newdata=test3,type="prob")$Yes)
plot(Roc3,legacy.axes=TRUE)
auc(Roc3)

##Figures
Acc<-read_excel("Model.accuracy.xlsx")
head(Acc)
f1A<-ggplot(Acc,aes(x=Measures,y=Anxiety,fill=Models))+
  geom_bar(stat="identity",position ="dodge",color="black")+
  scale_fill_manual(values = c("RF" = "red",
                               "XGBoost"="dark red",
                               "DT"="turquoise"))+theme(text = element_text(size=18))+
  theme_bw()+theme(legend.position ="none")+ggtitle("A: Anxiety")+ylab("Values")
f1A
f1B<-ggplot(Acc,aes(x=Measures,y=Depression,fill=Models))+
  geom_bar(stat="identity",position ="dodge",color="black")+
  scale_fill_manual(values = c("RF" = "red",
                               "XGBoost"="dark red",
                               "DT"="turquoise"))+theme(text = element_text(size=18))+
  theme_bw()+theme(legend.position ="none")+ggtitle("B: Depression")+ylab("")
f1B
f1C<-ggplot(Acc,aes(x=Measures,y=Insomnia,fill=Models))+
  geom_bar(stat="identity",position ="dodge",color="black")+
  scale_fill_manual(values = c("RF" = "red",
                               "XGBoost"="dark red",
                               "DT"="turquoise"))+theme(text = element_text(size=18))+
  theme_bw()+theme(legend.position =c(0.13,0.92))+ggtitle("C: Insomnia")+ylab("")
f1C

f1<-grid.arrange(f1A,f1B,f1C,ncol=3);f1

anxiety.feature<-read_excel("MHP.feature.imp.xlsx",sheet="Anxiety")
head(anxiety.feature)
f3A<-ggplot(anxiety.feature,aes(x=Contribution,y=reorder(Feature,Contribution),fill=Feature))+
  geom_bar(stat="identity",position = "dodge")+theme(text = element_text(size=18))+
  theme_set(theme_bw()+theme(legend.position ="none"))+
  ggtitle("A: Anxiety")+xlab("Contribution")+ylab("Features")
f3A
depression.feature<-read_excel("MHP.feature.imp.xlsx",sheet="Depression")
head(depression.feature)
f3B<-ggplot(depression.feature,aes(x=Contribution,y=reorder(Feature,Contribution),fill=Feature))+
  geom_bar(stat="identity",position = "dodge")+theme(text = element_text(size=18))+
  theme_set(theme_bw()+theme(legend.position ="none"))+
  ggtitle("B: Depression")+xlab("Contribution")+ylab("")
f3B
insomnia.feature<-read_excel("MHP.feature.imp.xlsx",sheet="Insomnia")
head(insomnia.feature)
f3C<-ggplot(insomnia.feature,aes(x=Contribution,y=reorder(Feature,Contribution),fill=Feature))+
  geom_bar(stat="identity",position = "dodge")+theme(text = element_text(size=18))+
  theme_set(theme_bw()+theme(legend.position ="none"))+
  ggtitle("C: Insomnia")+xlab("Contribution")+ylab("")
f3C
f3<-grid.arrange(f3A,f3B,f3C,ncol=3);f3
